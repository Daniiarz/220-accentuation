version: '3.7'

services:
  db:
    image: postgres:12-alpine
    env_file:
      - .env
    volumes:
      - accentuation_data:/var/lib/postgresql/data/
    restart: always

  backend: &backend
    build:
      context: back-end/
      dockerfile: ../compose/django/Dockerfile
    env_file:
      - .env
    volumes:
      - media:/usr/src/backend/media/
      - static:/usr/src/backend/static/
    command: sh -c "python manage.py migrate && python manage.py collectstatic --no-input && gunicorn -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 -w 4 --log-level info accentuation_220.asgi:application"
    depends_on:
      - db
      - celery-worker
    restart: always

  nginx:
    build:
      context: .
      dockerfile: compose/nginx/Dockerfile
    volumes:
      - media:/usr/media/:ro
      - static:/usr/static/:ro
    ports:
      - 80:80
    depends_on:
      - backend
      - sites-nginx
    restart: always

  sites-nginx:
    volumes:
      - ./conf/nginx/sites.nginx:/etc/nginx/conf.d/default.conf
      - ./sites/:/usr/src/sites/
    image: nginx:1.17.9-alpine
    depends_on:
      - backend
    restart: always

  rabbitmq:
    image: rabbitmq:3.8.3-alpine
    restart: on-failure

  celery-worker:
    <<: *backend
    image: celery-worker
    volumes:
      - /run/:/usr/src/run/
      - ./sites/:/usr/src/sites/
      - ./conf/nginx/:/usr/src/conf/
    command: ["celery", "worker", "-A", "accentuation_220", "--loglevel", "INFO"]
    ports: []
    depends_on:
      - rabbitmq
      - db
    restart: on-failure

    front-end:
      build:
        context: .
        dockerfile: ./compose/react/Dockerfile
      depends_on:
        - backend

volumes:
  accentuation_data:
  media:
  static:
